syntax = "proto3";

package nibiru.vpool.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "vpool/v1/state.proto";

option go_package = "github.com/NibiruChain/nibiru/x/vpool/types";

// Query defines the gRPC querier service.
service Query {

  // Queries the reserve assets in a given pool, identified by a token pair.
  rpc ReserveAssets(QueryReserveAssetsRequest) returns (QueryReserveAssetsResponse) {
    option (google.api.http).get = "/nibiru/vpool/reserve_assets";
  }

  // Queries all virtual pools.
  rpc AllPools(QueryAllPoolsRequest) returns (QueryAllPoolsResponse) {
    option (google.api.http).get = "/nibiru/vpool/all_pools";
  }

  // Queries prices
  rpc BaseAssetPrice(QueryBaseAssetPriceRequest) returns (QueryBaseAssetPriceResponse) {
    option (google.api.http).get = "/nibiru/vpool/base_asset_price";
  }  
  
}

// ---------------------------------------- QueryReserveAssets

message QueryReserveAssetsRequest {
    // always BASE:QUOTE, e.g. BTC:NUSD or ETH:NUSD
    string pair = 1;
}

message QueryReserveAssetsResponse {
  // base asset is the crypto asset, e.g. BTC or ETH
  string base_asset_reserve = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false];

  // quote asset is usually stablecoin, in our case NUSD
  string quote_asset_reserve = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false];
}

// ---------------------------------------- QueryAllPools

message QueryAllPoolsRequest { }

message QueryAllPoolsResponse {
  repeated Vpool pools = 1 [
    (gogoproto.nullable) = false
  ];
  repeated PoolPrices prices = 2 [
    (gogoproto.nullable) = false
  ];
}

// ---------------------------------------- BaseAssetPrice

message QueryBaseAssetPriceRequest {
  string pair = 1;
  Direction direction = 2;
  // base asset is the crypto asset, e.g. BTC or ETH
  string base_asset_amount = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false];
}

message QueryBaseAssetPriceResponse {
  string price_in_quote_denom = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false];
}