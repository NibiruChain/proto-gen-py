syntax = "proto3";

package nibiru.vpool.v1;

import "gogoproto/gogo.proto";
import "vpool/v1/state.proto";

option go_package = "github.com/NibiruChain/nibiru/x/vpool/types";

message CreatePoolProposal {
  string title = 1;
  string description = 2;
  // pair represents the pair of the vpool.
  string pair = 3;
  // quote_asset_reserve is the amount of quote asset the pool will be initialized with.
  string quote_asset_reserve = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // base_asset_reserve is the amount of base asset the pool will be initialized with.
  string base_asset_reserve = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  VpoolConfig config = 7 [
    (gogoproto.nullable) = false
  ];
}

message EditPoolConfigProposal {
  string title = 1;
  string description = 2;
  string pair = 3;
  VpoolConfig config = 4 [
    (gogoproto.nullable) = false
  ];
}

// EditSwapInvariantsProposal is a governance proposal to change the swap 
// invariant of the virtual pool for one or more trading pairs.
message EditSwapInvariantsProposal {
  string title = 1;
  string description = 2;

  // A map between a trading pair and a desired multiplier for its swap invariant. 
  message SwapInvariantMultiple {
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;

    // Pair is a string identifier for an asset pair. 
    string pair = 3;

    // Multiplier is a number representing the desired percentage change to the 
    // swap invariant of the AMM pool underlying 'pair'
    string multiplier = 4 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable) = false
    ];
  }

  // Map from pair ID to a multiple on the swap invariant. For example, a proposal containing 
  // "swap_invariant_maps": [{ "uatom:unusd": "5" }, { "uosmo:unusd": "0.9" }]
  // would mutliply the swap invariant of the ATOM and OSMO trading pairs by 
  // 5 and 0.9 respectively. The price at which k changes is the instantaneous 
  // mark price at the time of the proposal's execution.
  repeated SwapInvariantMultiple swap_invariant_maps = 5 [
    (gogoproto.nullable) = false
  ];
}
