syntax = "proto3";

package nibiru.perp.v1;

import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "perp/v1/state.proto";

option go_package="github.com/NibiruChain/nibiru/x/perp/types";

// Msg defines the x/perp Msg service.
service Msg {

  rpc RemoveMargin(MsgRemoveMargin) returns (MsgRemoveMarginResponse) {
    option (google.api.http).post = "/nibiru/perp/remove_margin";
  }

  rpc AddMargin(MsgAddMargin) returns (MsgAddMarginResponse) {
    option (google.api.http).post = "/nibiru/perp/add_margin";
  }

  /* Liquidate is a transaction that allows the caller to fully or partially 
  liquidate an existing position. */  
  rpc Liquidate(MsgLiquidate) returns (MsgLiquidateResponse) {
    option (google.api.http).post = "/nibiru/perp/liquidate";
  }

  rpc OpenPosition(MsgOpenPosition) returns (MsgOpenPositionResponse) {
    option (google.api.http).post = "/nibiru/perp/open_position";
  }

  rpc ClosePosition(MsgClosePosition) returns (MsgClosePositionResponse) {
    option (google.api.http).post = "/nibiru/perp/close_position";
  }

}

// -------------------------- RemoveMargin --------------------------

/* MsgRemoveMargin: Msg to remove margin. */
message MsgRemoveMargin {
  string sender = 1;

  string token_pair = 2;

  cosmos.base.v1beta1.Coin margin = 3 [(gogoproto.nullable) = false];
}

message MsgRemoveMarginResponse {
  // tokens transferred back to the trader
  cosmos.base.v1beta1.Coin margin_out = 1 [(gogoproto.nullable) = false];

  // the funding payment applied on this position interaction
  string funding_payment = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The resulting position
  Position position = 3;
}

// -------------------------- AddMargin --------------------------

/* MsgAddMargin: Msg to remove margin. */
message MsgAddMargin {
  string sender = 1;

  string token_pair = 2;

  cosmos.base.v1beta1.Coin margin = 3 [(gogoproto.nullable) = false];
}

message MsgAddMarginResponse {
  string funding_payment = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  Position position = 2;
}

// -------------------------- Liquidate --------------------------

message MsgLiquidate {
    // Sender is the liquidator address
    string sender = 1;

    // TokenPair is the identifier for the position's virtual pool
    string token_pair = 2;

    // Trader is the address of the owner of the position 
    string trader = 3;
  }
  
message MsgLiquidateResponse {
  cosmos.base.v1beta1.Coin fee_to_liquidator = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee_to_perp_ecosystem_fund = 2 [(gogoproto.nullable) = false];
}

// -------------------------- OpenPosition --------------------------

message MsgOpenPosition {
  string sender = 1;

  string token_pair = 2;

  nibiru.perp.v1.Side side = 3;

  string quote_asset_amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false];

  string leverage = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  string base_asset_amount_limit = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false];
}

message MsgOpenPositionResponse {
  Position position = 1;

  // The amount of quote assets exchanged.
  string exchanged_notional_value = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of base assets exchanged. 
  string exchanged_position_size = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The funding payment applied on this position change, measured in quote units.
  string funding_payment = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of PnL realized on this position changed, measured in quote units.
  string realized_pnl = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The unrealized PnL in the position after the position change, measured in quote units.
  string unrealized_pnl_after = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of margin the trader has to give to the vault.
  // A negative value means the vault pays the trader.
  string margin_to_vault = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The position's notional value after the position change, measured in quote units.
  string position_notional = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];
}

// -------------------------- ClosePosition --------------------------

message MsgClosePosition {
  string sender = 1;

  string token_pair = 2;
}

message MsgClosePositionResponse {
  // The amount of quote assets exchanged.
  string exchanged_notional_value = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of base assets exchanged. 
  string exchanged_position_size = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The funding payment applied on this position change, measured in quote units.
  string funding_payment = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of PnL realized on this position changed, measured in quote units.
  string realized_pnl = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];

  // The amount of margin the trader receives after closing the position, from the vault.
  // Should never be negative.
  string margin_to_trader = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false];
}