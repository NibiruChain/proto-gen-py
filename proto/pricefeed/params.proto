syntax = "proto3";
package nibiru.pricefeed.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "common/common.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/NibiruChain/nibiru/x/pricefeed/types";
option (gogoproto.equal_all)         = true;

// Params defines the parameters for the x/pricefeed module.
message Params {
  // Pairs is the list of valid trading pairs for the module. 
  // Add new trading pairs 
  repeated common.AssetPair pairs = 1 [(gogoproto.nullable) = false]; 

  // amount of time to look back for TWAP calculations
  google.protobuf.Duration twap_lookback_window = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "twap_lookback_window,omitempty",
    (gogoproto.moretags) = "yaml:\"twap_lookback_window\""
  ];
}

// OraclesMarshaler is a codec.ProtoMarshaler for an oracles array in the 
// OraclesState sdk.KVStore.  
message OraclesMarshaler {
  repeated bytes oracles = 1 [
    (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
}

// ActivePairMarshaler is a codec.ProtoMarshaler for the "IsActive" status of  
// a pair in the ActivePairState sdk.KVStore.  
message ActivePairMarshaler {
  bool is_active = 1;
}

// PostedPrice defines a price for an asset pair posted by a specific oracle.
message PostedPrice {
  string pair_id      = 1 [(gogoproto.customname) = "PairID"];
  string oracle = 2;
  string price = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
    (gogoproto.nullable) = false];
  google.protobuf.Timestamp expiry = 4 [
    (gogoproto.stdtime) = true, 
    (gogoproto.nullable) = false];
}

// CurrentPrice defines the current price for an asset pair in the pricefeed
// module.
message CurrentPrice {
  string pair_id = 1 [(gogoproto.customname) = "PairID"];
  string price = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}


// CurrentTWAP states defines the numerator and denominator for the TWAP calculation
message CurrentTWAP {
  string pair_id = 1 [(gogoproto.customname) = "PairID"];
  string numerator = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string denominator = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string price = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}