syntax = "proto3";
package nibiru.lockup.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/NibiruChain/nibiru/x/lockup/types";

// Lock represents a users locked tokens for a period of time.
// It stores owner, duration, unlock time and the amount of coins locked.
message Lock {
  // unique autoincrementing numeric lock id
  uint64 lock_id = 1;

  // the user's address who owns the tokens that are locked
  string owner = 2 [(gogoproto.moretags) = "yaml:\"owner\""];

  // the duration that the lock is locked for
  google.protobuf.Duration duration = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];

  // when the lock was unlocked
  google.protobuf.Timestamp end_time = 4 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];

  // the coins locked in this Lock
  repeated cosmos.base.v1beta1.Coin coins = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}