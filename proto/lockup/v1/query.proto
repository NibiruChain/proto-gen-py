syntax = "proto3";
package nibiru.lockup.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "lockup/v1/lock.proto";

option go_package = "github.com/NibiruChain/nibiru/x/lockup/types";

service Query {
  rpc LockedCoins(QueryLockedCoinsRequest) returns (QueryLockedCoinsResponse) {
    option (google.api.http).get = "/nibiru/lockup/locked_coins";
  }

  rpc Lock(QueryLockRequest) returns (QueryLockResponse) {
    option (google.api.http).get = "/nibiru/lockup/lock";
  }

  rpc LocksByAddress(QueryLocksByAddress) returns (QueryLocksByAddressResponse) {
    option (google.api.http).get = "/nibiru/lockup/locks_by_address";
  };
}

message QueryLockedCoinsRequest {
  string address = 1;
}

message QueryLockedCoinsResponse {
  repeated cosmos.base.v1beta1.Coin locked_coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message QueryLockRequest {
  uint64 id = 1;
}

message QueryLockResponse {
  nibiru.lockup.v1.Lock lock = 1;
}

message QueryLocksByAddress {
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryLocksByAddressResponse {
  repeated  nibiru.lockup.v1.Lock locks = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}