syntax = "proto3";

package nibiru.util.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "vpool/v1/state.proto";

option go_package = "github.com/NibiruChain/nibiru/x/util/types";

// Query defines the gRPC querier service.
service Query {

  // Queries the reserve assets in a given pool, identified by a token pair.
  rpc ModuleAccounts(QueryModuleAccountsRequest) returns (QueryModuleAccountsResponse) {
    option (google.api.http).get = "/nibiru/util/module_accounts";
  }
}

// ----------------------------------------

message QueryModuleAccountsRequest {}

message QueryModuleAccountsResponse {
  repeated AccountWithBalance accounts = 1 [(gogoproto.nullable) = false];
}

message AccountWithBalance {
  string name = 1;
  string address = 2;

  repeated cosmos.base.v1beta1.Coin balance = 3
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}