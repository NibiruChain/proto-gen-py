"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import cosmos.capability.v1beta1.capability_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GenesisOwners(google.protobuf.message.Message):
    """GenesisOwners defines the capability owners with their corresponding index."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEX_FIELD_NUMBER: builtins.int
    INDEX_OWNERS_FIELD_NUMBER: builtins.int
    index: builtins.int
    """index is the index of the capability owner."""
    @property
    def index_owners(self) -> cosmos.capability.v1beta1.capability_pb2.CapabilityOwners:
        """index_owners are the owners at the given index."""
    def __init__(
        self,
        *,
        index: builtins.int = ...,
        index_owners: cosmos.capability.v1beta1.capability_pb2.CapabilityOwners | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["index_owners", b"index_owners"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["index", b"index", "index_owners", b"index_owners"]) -> None: ...

global___GenesisOwners = GenesisOwners

@typing_extensions.final
class GenesisState(google.protobuf.message.Message):
    """GenesisState defines the capability module's genesis state."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDEX_FIELD_NUMBER: builtins.int
    OWNERS_FIELD_NUMBER: builtins.int
    index: builtins.int
    """index is the capability global index."""
    @property
    def owners(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GenesisOwners]:
        """owners represents a map from index to owners of the capability index
        index key is string to allow amino marshalling.
        """
    def __init__(
        self,
        *,
        index: builtins.int = ...,
        owners: collections.abc.Iterable[global___GenesisOwners] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["index", b"index", "owners", b"owners"]) -> None: ...

global___GenesisState = GenesisState
