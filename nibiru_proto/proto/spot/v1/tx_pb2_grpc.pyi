"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import spot.v1.tx_pb2

class MsgStub:
    """Msg defines the Msg service."""

    def __init__(self, channel: grpc.Channel) -> None: ...
    CreatePool: grpc.UnaryUnaryMultiCallable[
        spot.v1.tx_pb2.MsgCreatePool,
        spot.v1.tx_pb2.MsgCreatePoolResponse,
    ]
    """Used to create a pool."""
    JoinPool: grpc.UnaryUnaryMultiCallable[
        spot.v1.tx_pb2.MsgJoinPool,
        spot.v1.tx_pb2.MsgJoinPoolResponse,
    ]
    """Join a pool as a liquidity provider."""
    ExitPool: grpc.UnaryUnaryMultiCallable[
        spot.v1.tx_pb2.MsgExitPool,
        spot.v1.tx_pb2.MsgExitPoolResponse,
    ]
    """Exit a pool position by returning LP shares"""
    SwapAssets: grpc.UnaryUnaryMultiCallable[
        spot.v1.tx_pb2.MsgSwapAssets,
        spot.v1.tx_pb2.MsgSwapAssetsResponse,
    ]
    """Swap assets in a pool"""

class MsgServicer(metaclass=abc.ABCMeta):
    """Msg defines the Msg service."""

    @abc.abstractmethod
    def CreatePool(
        self,
        request: spot.v1.tx_pb2.MsgCreatePool,
        context: grpc.ServicerContext,
    ) -> spot.v1.tx_pb2.MsgCreatePoolResponse:
        """Used to create a pool."""
    @abc.abstractmethod
    def JoinPool(
        self,
        request: spot.v1.tx_pb2.MsgJoinPool,
        context: grpc.ServicerContext,
    ) -> spot.v1.tx_pb2.MsgJoinPoolResponse:
        """Join a pool as a liquidity provider."""
    @abc.abstractmethod
    def ExitPool(
        self,
        request: spot.v1.tx_pb2.MsgExitPool,
        context: grpc.ServicerContext,
    ) -> spot.v1.tx_pb2.MsgExitPoolResponse:
        """Exit a pool position by returning LP shares"""
    @abc.abstractmethod
    def SwapAssets(
        self,
        request: spot.v1.tx_pb2.MsgSwapAssets,
        context: grpc.ServicerContext,
    ) -> spot.v1.tx_pb2.MsgSwapAssetsResponse:
        """Swap assets in a pool"""

def add_MsgServicer_to_server(servicer: MsgServicer, server: grpc.Server) -> None: ...
