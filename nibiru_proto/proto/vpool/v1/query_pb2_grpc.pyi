"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import vpool.v1.query_pb2

class QueryStub:
    """Query defines the gRPC querier service."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    ReserveAssets: grpc.UnaryUnaryMultiCallable[
        vpool.v1.query_pb2.QueryReserveAssetsRequest,
        vpool.v1.query_pb2.QueryReserveAssetsResponse]
    """Queries the reserve assets in a given pool, identified by a token pair."""

    AllPools: grpc.UnaryUnaryMultiCallable[
        vpool.v1.query_pb2.QueryAllPoolsRequest,
        vpool.v1.query_pb2.QueryAllPoolsResponse]
    """Queries all virtual pools."""

    BaseAssetPrice: grpc.UnaryUnaryMultiCallable[
        vpool.v1.query_pb2.QueryBaseAssetPriceRequest,
        vpool.v1.query_pb2.QueryBaseAssetPriceResponse]
    """Queries prices"""


class QueryServicer(metaclass=abc.ABCMeta):
    """Query defines the gRPC querier service."""
    @abc.abstractmethod
    def ReserveAssets(self,
        request: vpool.v1.query_pb2.QueryReserveAssetsRequest,
        context: grpc.ServicerContext,
    ) -> vpool.v1.query_pb2.QueryReserveAssetsResponse:
        """Queries the reserve assets in a given pool, identified by a token pair."""
        pass

    @abc.abstractmethod
    def AllPools(self,
        request: vpool.v1.query_pb2.QueryAllPoolsRequest,
        context: grpc.ServicerContext,
    ) -> vpool.v1.query_pb2.QueryAllPoolsResponse:
        """Queries all virtual pools."""
        pass

    @abc.abstractmethod
    def BaseAssetPrice(self,
        request: vpool.v1.query_pb2.QueryBaseAssetPriceRequest,
        context: grpc.ServicerContext,
    ) -> vpool.v1.query_pb2.QueryBaseAssetPriceResponse:
        """Queries prices"""
        pass


def add_QueryServicer_to_server(servicer: QueryServicer, server: grpc.Server) -> None: ...
