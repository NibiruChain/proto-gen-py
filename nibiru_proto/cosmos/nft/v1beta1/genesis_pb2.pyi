"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import cosmos.nft.v1beta1.nft_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GenesisState(google.protobuf.message.Message):
    """GenesisState defines the nft module's genesis state."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLASSES_FIELD_NUMBER: builtins.int
    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def classes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.nft.v1beta1.nft_pb2.Class]:
        """class defines the class of the nft type."""
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Entry]:
        """entry defines all nft owned by a person."""
    def __init__(
        self,
        *,
        classes: collections.abc.Iterable[cosmos.nft.v1beta1.nft_pb2.Class] | None = ...,
        entries: collections.abc.Iterable[global___Entry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["classes", b"classes", "entries", b"entries"]) -> None: ...

global___GenesisState = GenesisState

@typing_extensions.final
class Entry(google.protobuf.message.Message):
    """Entry Defines all nft owned by a person"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OWNER_FIELD_NUMBER: builtins.int
    NFTS_FIELD_NUMBER: builtins.int
    owner: builtins.str
    """owner is the owner address of the following nft"""
    @property
    def nfts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.nft.v1beta1.nft_pb2.NFT]:
        """nfts is a group of nfts of the same owner"""
    def __init__(
        self,
        *,
        owner: builtins.str = ...,
        nfts: collections.abc.Iterable[cosmos.nft.v1beta1.nft_pb2.NFT] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["nfts", b"nfts", "owner", b"owner"]) -> None: ...

global___Entry = Entry
