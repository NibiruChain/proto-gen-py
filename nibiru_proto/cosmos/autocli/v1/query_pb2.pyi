"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import cosmos.autocli.v1.options_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AppOptionsRequest(google.protobuf.message.Message):
    """AppOptionsRequest is the RemoteInfoService/AppOptions request type."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___AppOptionsRequest = AppOptionsRequest

@typing_extensions.final
class AppOptionsResponse(google.protobuf.message.Message):
    """AppOptionsResponse is the RemoteInfoService/AppOptions response type."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ModuleOptionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> cosmos.autocli.v1.options_pb2.ModuleOptions: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: cosmos.autocli.v1.options_pb2.ModuleOptions | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    MODULE_OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def module_options(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, cosmos.autocli.v1.options_pb2.ModuleOptions]:
        """module_options is a map of module name to autocli module options."""
    def __init__(
        self,
        *,
        module_options: collections.abc.Mapping[builtins.str, cosmos.autocli.v1.options_pb2.ModuleOptions] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_options", b"module_options"]) -> None: ...

global___AppOptionsResponse = AppOptionsResponse
